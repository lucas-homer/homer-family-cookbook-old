generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model User {
  id              String               @id @default(uuid())
  email           String               @db.VarChar(255)
  firstName       String?              @db.VarChar(255)
  lastName        String?              @db.VarChar(255)
  createdAt       DateTime             @default(now())
  updatedAt       DateTime             @updatedAt
  favoriteRecipes FavoritesOnRecipes[]
  recentlyViewed  Recipe[]
  mealNotes       Note[]
  isAdmin         Boolean              @default(false)
}

model FavoritesOnRecipes {
  recipeId Int
  recipe   Recipe @relation(fields: [recipeId], references: [id])
  userId   String
  user     User   @relation(fields: [userId], references: [id])

  @@id([recipeId, userId])
}

model Recipe {
  id             Int                  @id @default(autoincrement())
  title          String
  authorId       String
  author         User                 @relation(fields: [authorId], references: [id], onDelete: Cascade)
  createdAt      DateTime             @default(now())
  updatedAt      DateTime             @updatedAt
  instructions   String
  ingredients    Ingredient[]
  servings       String?
  mealTypes      MealType[]
  favoritedUsers FavoritesOnRecipes[]
  notes          Note[]
}

model Note {
  id        Int      @id @default(autoincrement())
  authorId  String
  author    User     @relation(fields: [authorId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  recipeId  Int
  recipe    Recipe   @relation(fields: [recipeId], references: [id], onDelete: Cascade)

}

model MealType {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  recipes     Recipe[]
}

model Ingredient {
  id        Int      @id @default(autoincrement())
  name      String
  quantity  String?
  recipeId  Int
  recipe    Recipe   @relation(fields: [recipeId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt


}
